apiVersion: apps/v1 # Menentukan versi API yang digunakan untuk Deployment
kind: Deployment # Menentukan jenis resource, dalam hal ini Deployment
metadata:
  name: order-service # Menentukan nama Deployment sebagai "order-service"
spec:
  replicas: 1 # Menentukan jumlah replika pod yang harus dijalankan (hanya 1 instance)
  selector:
    matchLabels:
      app: order-service # Menentukan label selector untuk mencocokkan pod yang dikelola oleh Deployment
  template:
    metadata:
      labels:
        app: order-service # Menetapkan label "app: order-service" untuk pod
    spec:
      containers:
        - name: order-service # Menentukan nama container sebagai "order-service"
          image: ghcr.io/abiyamakruf/order-service:latest # Menentukan image dari container dengan versi terbaru dari GitHub Container Registry
          ports:
            - containerPort: 3000 # Mengekspos port 3000 pada container
          # Bisa menggunakan cara berikut atau menggunakan .env pada masing-masing container (namun karena url berubah-berubah dan menganti image akan lama lebih baik disini)
          env: 
            - name: AMQP_URL # Menetapkan variabel lingkungan untuk koneksi ke RabbitMQ
              value: "amqp://guest:guest@rabbitmq:5672" # URL untuk menghubungkan service ke RabbitMQ

---
apiVersion: v1 # Menentukan versi API yang digunakan untuk Service
kind: Service # Menentukan jenis resource, dalam hal ini Service
metadata:
  name: order-service # Menentukan nama Service sebagai "order-service"
spec:
  selector:
    app: order-service # Memilih pod dengan label "app: order-service" untuk dikaitkan dengan Service
  ports:
    - protocol: TCP # Menggunakan protokol TCP
      port: 3000 # Mengekspos port 3000 pada Service
      targetPort: 3000 # Mengarahkan permintaan ke port 3000 pada pod
  type: ClusterIP # Menentukan tipe Service sebagai ClusterIP (hanya dapat diakses dalam cluster)
